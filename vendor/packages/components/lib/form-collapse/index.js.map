{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["form-collapse/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Collapse, Badge } from 'ant-design-vue'\r\nimport { model, markRaw } from '@formily/reactive'\r\nimport type { CollapseProps } from 'ant-design-vue/lib/collapse'\r\nimport type { CollapsePanelProps } from 'ant-design-vue/lib/collapse/CollapsePanel'\r\nimport {\r\n  useField,\r\n  useFieldSchema,\r\n  RecursionField,\r\n  FragmentComponent,\r\n} from '@formily/vue'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport type { Schema, SchemaKey } from '@formily/json-schema'\r\nimport type { PropType } from 'vue'\r\nimport { computed, defineComponent, h } from 'vue'\r\nimport { toArr } from '@formily/shared'\r\nimport { composeExport, stylePrefix } from '../__builtins__'\r\nimport type { GeneralField } from '@formily/core'\r\n\r\ntype ActiveKeys = string | number | Array<string | number>\r\n\r\ntype ActiveKey = string | number\r\n\r\nexport interface IFormCollapse {\r\n  activeKeys: ActiveKeys\r\n  hasActiveKey(key: ActiveKey): boolean\r\n  setActiveKeys(key: ActiveKeys): void\r\n  addActiveKey(key: ActiveKey): void\r\n  removeActiveKey(key: ActiveKey): void\r\n  toggleActiveKey(key: ActiveKey): void\r\n}\r\n\r\nexport interface IFormCollapseProps extends CollapseProps {\r\n  formCollapse?: IFormCollapse\r\n}\r\n\r\ntype Panels = { name: SchemaKey; props: any; schema: Schema }[]\r\n\r\nconst usePanels = (collapseField: GeneralField, schema: Schema) => {\r\n  const panels: Panels = []\r\n  schema.mapProperties((schema, name) => {\r\n    const field = collapseField.query(collapseField.address.concat(name)).take()\r\n    if (field?.display === 'none' || field?.display === 'hidden') return\r\n    if (schema['x-component']?.indexOf('CollapsePanel') > -1) {\r\n      panels.push({\r\n        name,\r\n        props: {\r\n          ...schema?.['x-component-props'],\r\n          key: schema?.['x-component-props']?.key || name,\r\n        },\r\n        schema,\r\n      })\r\n    }\r\n  })\r\n  return panels\r\n}\r\n\r\nconst createFormCollapse = (defaultActiveKeys?: ActiveKeys) => {\r\n  const formCollapse = model({\r\n    activeKeys: defaultActiveKeys,\r\n    setActiveKeys(keys: ActiveKeys) {\r\n      formCollapse.activeKeys = keys\r\n    },\r\n    hasActiveKey(key: ActiveKey) {\r\n      if (Array.isArray(formCollapse.activeKeys)) {\r\n        if (formCollapse.activeKeys.includes(key)) {\r\n          return true\r\n        }\r\n      } else if (formCollapse.activeKeys == key) {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    addActiveKey(key: ActiveKey) {\r\n      if (formCollapse.hasActiveKey(key)) return\r\n      formCollapse.activeKeys = toArr(formCollapse.activeKeys).concat(key)\r\n    },\r\n    removeActiveKey(key: ActiveKey) {\r\n      if (Array.isArray(formCollapse.activeKeys)) {\r\n        formCollapse.activeKeys = formCollapse.activeKeys.filter(\r\n          (item) => item != key\r\n        )\r\n      } else {\r\n        formCollapse.activeKeys = ''\r\n      }\r\n    },\r\n    toggleActiveKey(key: ActiveKey) {\r\n      if (formCollapse.hasActiveKey(key)) {\r\n        formCollapse.removeActiveKey(key)\r\n      } else {\r\n        formCollapse.addActiveKey(key)\r\n      }\r\n    },\r\n  })\r\n  return markRaw(formCollapse)\r\n}\r\n\r\nconst _FormCollapse = observer(\r\n  // eslint-disable-next-line vue/one-component-per-file\r\n  defineComponent({\r\n    inheritAttrs: false,\r\n    props: {\r\n      // eslint-disable-next-line vue/require-default-prop\r\n      formCollapse: { type: Object as PropType<IFormCollapse> },\r\n      // eslint-disable-next-line vue/require-default-prop\r\n      activeKey: {\r\n        type: [String, Number],\r\n      },\r\n    },\r\n    emits: ['input'],\r\n    setup(props: IFormCollapseProps, { attrs, emit }) {\r\n      const field = useField()\r\n      const schema = useFieldSchema()\r\n      const prefixCls = `${stylePrefix}-form-collapse`\r\n      const _formCollapse = computed(\r\n        () => props.formCollapse ?? createFormCollapse()\r\n      )\r\n\r\n      const takeActiveKeys = (panels: Panels) => {\r\n        if (props.activeKey) return props.activeKey\r\n        if (_formCollapse.value?.activeKeys)\r\n          return _formCollapse.value?.activeKeys\r\n        if (attrs.accordion) return panels[0]?.name\r\n        return panels.map((item) => item.name)\r\n      }\r\n\r\n      const badgedHeader = (key: SchemaKey, header: string) => {\r\n        const errors = field.value.form.queryFeedbacks({\r\n          type: 'error',\r\n          address: `${field.value.address.concat(key)}.*`,\r\n        })\r\n        if (errors.length) {\r\n          return h(\r\n            Badge,\r\n            {\r\n              class: [`${prefixCls}-errors-badge`],\r\n              count: errors.length,\r\n            },\r\n            { default: () => [header] }\r\n          )\r\n        }\r\n        return header\r\n      }\r\n\r\n      return () => {\r\n        const panels = usePanels(field.value, schema.value)\r\n        const activeKey = takeActiveKeys(panels)\r\n        return h(\r\n          Collapse,\r\n          {\r\n            class: prefixCls,\r\n            ...props,\r\n            activeKey,\r\n            onChange: (key: string | string[]) => {\r\n              emit('input', key)\r\n              _formCollapse.value.setActiveKeys(key)\r\n            },\r\n          },\r\n          {\r\n            default: () => {\r\n              return panels.map(({ props, schema, name }) => {\r\n                const { header, ...restProps } = props\r\n                return h(\r\n                  Collapse.Panel,\r\n                  {\r\n                    key: name,\r\n                    ...restProps,\r\n                    name,\r\n                    forceRender: true,\r\n                  },\r\n                  {\r\n                    default: () => [h(RecursionField, { schema, name }, {})],\r\n                    header: () =>\r\n                      h(\r\n                        FragmentComponent,\r\n                        {},\r\n                        {\r\n                          default: () => badgedHeader(name, header),\r\n                        }\r\n                      ),\r\n                  }\r\n                )\r\n              })\r\n            },\r\n          }\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\n// eslint-disable-next-line vue/one-component-per-file\r\nexport const CollapsePanel = defineComponent<CollapsePanelProps>({\r\n  name: 'FormCollapsePanel',\r\n  setup(props, { slots }) {\r\n    return () => h(FragmentComponent, {}, slots)\r\n  },\r\n})\r\n\r\nexport const FormCollapse = composeExport(_FormCollapse, {\r\n  CollapsePanel,\r\n  createFormCollapse,\r\n})\r\n\r\nexport default FormCollapse\r\n"]}