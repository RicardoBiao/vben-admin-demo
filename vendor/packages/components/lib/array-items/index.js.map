{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["array-items/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DefineComponent } from 'vue'\r\nimport { defineComponent, h } from 'vue'\r\nimport type { ArrayField } from '@formily/core'\r\nimport { useField, useFieldSchema, RecursionField } from '@formily/vue'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport type { ISchema } from '@formily/json-schema'\r\nimport { stylePrefix } from '../__builtins__/configs'\r\nimport { ArrayBase } from '../array-base'\r\nimport { SlickList, SlickItem } from 'vue-slicksort'\r\nimport { composeExport } from '../__builtins__/shared'\r\n\r\nconst isAdditionComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('Addition') > -1\r\n}\r\n\r\nexport interface IArrayItemsItemProps {\r\n  type?: 'card' | 'divide'\r\n}\r\n\r\nconst ArrayItemsInner = observer(\r\n  defineComponent({\r\n    name: 'ArrayItems',\r\n    setup() {\r\n      const fieldRef = useField<ArrayField>()\r\n      const schemaRef = useFieldSchema()\r\n\r\n      const prefixCls = `${stylePrefix}-array-items`\r\n      const { getKey, keyMap } = ArrayBase.useKey(schemaRef.value)\r\n\r\n      return () => {\r\n        const field = fieldRef.value\r\n        const schema = schemaRef.value\r\n        const dataSource = Array.isArray(field.value) ? field.value.slice() : []\r\n        if (!schema) throw new Error('can not found schema object')\r\n\r\n        const renderItems = () => {\r\n          const items = dataSource?.map((item, index) => {\r\n            const items = Array.isArray(schema.items)\r\n              ? schema.items[index] || schema.items[0]\r\n              : schema.items\r\n            const key = getKey(item, index)\r\n            return h(\r\n              ArrayBase.Item,\r\n              {\r\n                key,\r\n                index,\r\n                record: item,\r\n              },\r\n              {\r\n                default: () =>\r\n                  h(\r\n                    SlickItem as DefineComponent,\r\n                    {\r\n                      class: [`${prefixCls}-item-inner`],\r\n                      index,\r\n                      key,\r\n                    },\r\n                    {\r\n                      default: () =>\r\n                        h(RecursionField, {\r\n                          schema: items,\r\n                          name: index,\r\n                        }),\r\n                    }\r\n                  ),\r\n              }\r\n            )\r\n          })\r\n\r\n          return h(\r\n            SlickList as DefineComponent,\r\n            {\r\n              class: [`${prefixCls}-list`],\r\n              useDragHandle: true,\r\n              axis: 'y',\r\n              helperClass: `${prefixCls}-sort-helper`,\r\n              list: dataSource,\r\n              onSortEnd({ oldIndex, newIndex }) {\r\n                if (Array.isArray(keyMap)) {\r\n                  keyMap.splice(newIndex, 0, keyMap.splice(oldIndex, 1)[0])\r\n                }\r\n                field.move(oldIndex, newIndex)\r\n              },\r\n            },\r\n            {\r\n              default: () => items,\r\n            }\r\n          )\r\n        }\r\n\r\n        const renderAddition = () => {\r\n          return schema.reduceProperties((addition, schema, key) => {\r\n            if (isAdditionComponent(schema)) {\r\n              return h(RecursionField, {\r\n                schema,\r\n                name: key,\r\n              })\r\n            }\r\n            return addition\r\n          }, null)\r\n        }\r\n\r\n        return h(\r\n          ArrayBase,\r\n          {\r\n            keyMap,\r\n          },\r\n          {\r\n            default: () =>\r\n              h(\r\n                'div',\r\n                {\r\n                  class: [prefixCls],\r\n                  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n                  onChange: () => {},\r\n                },\r\n                {\r\n                  default: () => [renderItems(), renderAddition()],\r\n                }\r\n              ),\r\n          }\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nconst ArrayItemsItem = defineComponent({\r\n  name: 'ArrayItemsItem',\r\n  props: ['type'],\r\n  setup(props: IArrayItemsItemProps, { attrs, slots }) {\r\n    const prefixCls = `${stylePrefix}-array-items`\r\n\r\n    return () =>\r\n      h(\r\n        'div',\r\n        {\r\n          ...attrs,\r\n          class: [`${prefixCls}-${props.type || 'card'}`],\r\n          // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n          onChange: () => {},\r\n        },\r\n        slots\r\n      )\r\n  },\r\n})\r\n\r\nexport const ArrayItems = composeExport(ArrayItemsInner, {\r\n  Item: ArrayItemsItem,\r\n  Index: ArrayBase.Index,\r\n  SortHandle: ArrayBase.SortHandle,\r\n  Addition: ArrayBase.Addition,\r\n  Remove: ArrayBase.Remove,\r\n  MoveDown: ArrayBase.MoveDown,\r\n  MoveUp: ArrayBase.MoveUp,\r\n  useArray: ArrayBase.useArray,\r\n  useIndex: ArrayBase.useIndex,\r\n  useRecord: ArrayBase.useRecord,\r\n})\r\n\r\nexport default ArrayItems\r\n"]}