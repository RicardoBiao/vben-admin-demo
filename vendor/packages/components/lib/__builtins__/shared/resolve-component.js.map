{"version":3,"file":"resolve-component.js","sourceRoot":"lib/","sources":["__builtins__/shared/resolve-component.ts"],"names":[],"mappings":";;;AACA,2BAA8B;AAE9B,iCAAiC;AAE1B,IAAM,gBAAgB,GAAG,UAC9B,KAAiB,EACjB,KAA2B;IAE3B,IAAI,KAAK,EAAE;QACT,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC1D,OAAO,KAAK,CAAA;SACb;aAAM,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;YACtC,wDAAwD;YACxD,OAAQ,KAAkB,CAAC,KAAK,CAAC,CAAA;SAClC;aAAM,IAAI,IAAA,eAAO,EAAC,KAAK,CAAC,EAAE;YACzB,OAAO,KAAK,CAAA;SACb;aAAM;YACL,OAAO,IAAA,OAAC,EAAC,IAAA,WAAK,EAAC,KAAwB,CAAC,EAAE,EAAE,KAAK,OAAA,EAAE,CAAC,CAAA;SACrD;KACF;IAED,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAlBY,QAAA,gBAAgB,oBAkB5B","sourcesContent":["import type { DefineComponent } from 'vue'\r\nimport { h, toRaw } from 'vue'\r\nimport type { SlotTypes } from '.'\r\nimport { isVnode } from './utils'\r\n\r\nexport const resolveComponent = (\r\n  child?: SlotTypes,\r\n  props?: Record<string, any>\r\n) => {\r\n  if (child) {\r\n    if (typeof child === 'string' || typeof child === 'number') {\r\n      return child\r\n    } else if (typeof child === 'function') {\r\n      // eslint-disable-next-line @typescript-eslint/ban-types\r\n      return (child as Function)(props)\r\n    } else if (isVnode(child)) {\r\n      return child\r\n    } else {\r\n      return h(toRaw(child as DefineComponent), { props })\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n"]}