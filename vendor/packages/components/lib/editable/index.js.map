{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["editable/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { useField } from '@formily/vue'\r\nimport { defineComponent, ref, onBeforeUnmount, computed, h } from 'vue'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport { Popover as AntdPopover } from 'ant-design-vue'\r\nimport { composeExport } from '../__builtins__'\r\nimport type { FormItemProps } from '../form-item'\r\nimport { FormBaseItem } from '../form-item'\r\nimport type { PopoverProps } from 'ant-design-vue/lib/popover'\r\nimport type { Field } from '@formily/core'\r\nimport { isVoidField } from '@formily/core'\r\nimport { stylePrefix } from '../__builtins__/configs'\r\nimport { reaction } from '@formily/reactive'\r\nimport {\r\n  EditOutlined,\r\n  CloseOutlined,\r\n  MessageOutlined,\r\n} from '@ant-design/icons-vue'\r\n\r\ntype IPopoverProps = PopoverProps\r\nexport type EditableProps = FormItemProps\r\n\r\nconst useInitialPattern = (fieldRef) => {\r\n  const field = fieldRef.value\r\n  return computed(() => field?.pattern)\r\n}\r\n\r\nconst useFormItemProps = (fieldRef): FormItemProps => {\r\n  const field = fieldRef.value\r\n  if (isVoidField(field)) return {}\r\n  if (!field) return {}\r\n  const takeMessage = () => {\r\n    if (field.selfErrors.length) return field.selfErrors\r\n    if (field.selfWarnings.length) return field.selfWarnings\r\n    if (field.selfSuccesses.length) return field.selfSuccesses\r\n  }\r\n\r\n  return {\r\n    feedbackStatus:\r\n      field.validateStatus === 'validating' ? 'pending' : field.validateStatus,\r\n    feedbackText: takeMessage(),\r\n    extra: field.description,\r\n  }\r\n}\r\n\r\nconst EditableInner = observer(\r\n  // eslint-disable-next-line vue/one-component-per-file\r\n  defineComponent<EditableProps>({\r\n    name: 'Editable',\r\n    setup(props, { attrs, slots }) {\r\n      const fieldRef = useField<Field>()\r\n      const innerRef = ref(document.body)\r\n      const pattern = useInitialPattern(fieldRef)\r\n      const prefixCls = `${stylePrefix}-editable`\r\n      const setEditable = (payload: boolean) => {\r\n        // console.log('pattern', pattern)\r\n        if (pattern.value !== 'editable') return\r\n        fieldRef.value.setPattern(payload ? 'editable' : 'readPretty')\r\n      }\r\n\r\n      const dispose = reaction(\r\n        () => {\r\n          return pattern\r\n        },\r\n        (pattern) => {\r\n          if (pattern.value === 'editable') {\r\n            fieldRef.value.setPattern('readPretty')\r\n          }\r\n        },\r\n        {\r\n          fireImmediately: true,\r\n        }\r\n      )\r\n\r\n      onBeforeUnmount(() => {\r\n        const field = fieldRef.value\r\n        field.setPattern(pattern.value)\r\n        dispose()\r\n      })\r\n\r\n      return () => {\r\n        const field = fieldRef.value\r\n        const editable = field.pattern === 'editable'\r\n        const itemProps = useFormItemProps(fieldRef)\r\n\r\n        const closeEditable = () => {\r\n          if (editable && !fieldRef.value?.errors?.length) {\r\n            setEditable(false)\r\n          }\r\n        }\r\n\r\n        const onClick = (e: MouseEvent) => {\r\n          const target = e.target as HTMLElement\r\n          const close = innerRef.value.querySelector(`.${prefixCls}-close-btn`)\r\n\r\n          if (target?.contains(close) || close?.contains(target)) {\r\n            closeEditable()\r\n          } else if (!editable) {\r\n            setTimeout(() => {\r\n              setEditable(true)\r\n              setTimeout(() => {\r\n                innerRef.value.querySelector('input')?.focus()\r\n              })\r\n            })\r\n          }\r\n        }\r\n\r\n        const renderEditHelper = () => {\r\n          if (editable) return\r\n          return h(\r\n            FormBaseItem,\r\n            {\r\n              ...attrs,\r\n              ...itemProps,\r\n            },\r\n            {\r\n              default: () => {\r\n                return pattern.value === 'editable'\r\n                  ? h(\r\n                      EditOutlined,\r\n                      {\r\n                        class: [`${prefixCls}-edit-btn`],\r\n                      },\r\n                      {}\r\n                    )\r\n                  : null\r\n              },\r\n            }\r\n          )\r\n        }\r\n\r\n        const renderCloseHelper = () => {\r\n          if (!editable) return\r\n          return h(\r\n            FormBaseItem,\r\n            {\r\n              attrs: {\r\n                ...attrs,\r\n              },\r\n            },\r\n            {\r\n              default: () => {\r\n                return h(\r\n                  CloseOutlined,\r\n                  {\r\n                    class: [`${prefixCls}-close-btn`],\r\n                  },\r\n                  {}\r\n                )\r\n              },\r\n            }\r\n          )\r\n        }\r\n\r\n        return h(\r\n          'div',\r\n          {\r\n            class: prefixCls,\r\n            ref: 'innerRef',\r\n            onClick: onClick,\r\n          },\r\n          {\r\n            default: () => {\r\n              return h(\r\n                'div',\r\n                {\r\n                  class: `${prefixCls}-content`,\r\n                },\r\n                {\r\n                  default: () => [\r\n                    h(\r\n                      FormBaseItem,\r\n                      {\r\n                        ...attrs,\r\n                        ...itemProps,\r\n                      },\r\n                      slots\r\n                    ),\r\n                    renderEditHelper(),\r\n                    renderCloseHelper(),\r\n                  ],\r\n                }\r\n              )\r\n            },\r\n          }\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nconst EditablePopover = observer(\r\n  // eslint-disable-next-line vue/one-component-per-file\r\n  defineComponent<IPopoverProps>({\r\n    name: 'EditablePopover',\r\n    setup(props, { attrs, slots }) {\r\n      const fieldRef = useField<Field>()\r\n      const prefixCls = `${stylePrefix}-editable`\r\n      const visible = ref(false)\r\n\r\n      return () => {\r\n        const field = fieldRef.value\r\n        const pattern = useInitialPattern(fieldRef)\r\n        return h(\r\n          AntdPopover,\r\n          {\r\n            ...props,\r\n            ...attrs,\r\n            class: [prefixCls, attrs.class],\r\n            title: attrs.title || field.title,\r\n            visible: visible.value,\r\n            trigger: 'click',\r\n            onVisibleChange: (value: boolean) => {\r\n              visible.value = value\r\n            },\r\n          },\r\n          {\r\n            content: () => [slots.default()],\r\n            default: () =>\r\n              h(\r\n                FormBaseItem,\r\n                {\r\n                  class: [`${prefixCls}-trigger`],\r\n                },\r\n                {\r\n                  default: () =>\r\n                    h(\r\n                      'div',\r\n                      {\r\n                        class: [`${prefixCls}-content`],\r\n                      },\r\n                      {\r\n                        default: () => [\r\n                          h(\r\n                            'span',\r\n                            {\r\n                              class: [`${prefixCls}-preview`],\r\n                            },\r\n                            {\r\n                              default: () => [attrs.title || field.title],\r\n                            }\r\n                          ),\r\n                          pattern.value === 'editable'\r\n                            ? h(EditOutlined, {\r\n                                class: [`${prefixCls}-edit-btn`],\r\n                              })\r\n                            : h(MessageOutlined, {\r\n                                class: [`${prefixCls}-edit-btn`],\r\n                              }),\r\n                        ],\r\n                      }\r\n                    ),\r\n                }\r\n              ),\r\n          }\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nexport const Editable = composeExport(EditableInner, {\r\n  Popover: EditablePopover,\r\n})\r\n\r\nexport default Editable\r\n"]}