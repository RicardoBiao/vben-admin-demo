{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["form/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,oCAAqE;AACrE,2BAAwC;AAExC,8CAA2C;AAC3C,gDAA6C;AAG7C,IAAM,YAAY,GAAG,kBAAqC,CAAA;AAU7C,QAAA,IAAI,GAAG,IAAA,qBAAe,EAAC;IAClC,IAAI,EAAE,OAAO;IACb,KAAK,EAAE;QACL,MAAM;QACN,WAAW;QACX,wBAAwB;QACxB,cAAc;QACd,oBAAoB;KACrB;IACD,KAAK,EAAL,UAAM,KAAgB,EAAE,EAAgB;YAAd,KAAK,WAAA,EAAE,KAAK,WAAA;QACpC,IAAM,GAAG,GAAG,IAAA,aAAO,GAAE,CAAA;QAErB,OAAO;YAEH,IAAA,IAAI,GAKF,KAAK,KALH,EACJ,KAIE,KAAK,UAJW,EAAlB,SAAS,mBAAG,MAAM,KAAA,EAClB,KAGE,KAAK,aAHyB,EAAhC,YAAY,mBAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,UAAU,KAAA,EAChC,KAEE,KAAK,mBAFqC,EAA5C,kBAAkB,mBAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,gBAAgB,KAAA,EAC5C,KACE,KAAK,uBAD+C,EAAtD,sBAAsB,mBAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,sBAAsB,KAAA,CAC/C;YAET,IAAM,aAAa,GAAG,UAAC,IAAc;gBACnC,OAAO,IAAA,OAAC,EACN,0BAAW,CAAC,WAA8B,EAC1C;oBACE,KAAK,EAAE,sBAAsB;iBAC9B,EACD;oBACE,OAAO,EAAE,cAAM,OAAA;wBACb,IAAA,OAAC,EACC,wBAAU,eAEL,KAAK,GAEV;4BACE,OAAO,EAAE,cAAM,OAAA;gCACb,IAAA,OAAC,EACC,SAA4B,EAC5B;oCACE,QAAQ,EAAE,UAAC,CAAQ;;wCACjB,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,eAAe,iDAAI,CAAA;wCACtB,MAAA,CAAC,aAAD,CAAC,uBAAD,CAAC,CAAE,cAAc,iDAAI,CAAA;wCACrB,IAAI;6CACD,MAAM,CAAC,YAAgC,CAAC;6CACxC,KAAK,CAAC,kBAAsC,CAAC,CAAA;oCAClD,CAAC;iCACF,EACD,KAAK,CACN;6BACF,EAdc,CAcd;yBACF,CACF;qBACF,EAxBc,CAwBd;iBACF,CACF,CAAA;YACH,CAAC,CAAA;YAED,IAAI,IAAI,EAAE;gBACR,OAAO,IAAA,OAAC,EACN,YAA+B,EAC/B,EAAE,IAAI,MAAA,EAAE,EACR;oBACE,OAAO,EAAE,cAAM,OAAA,aAAa,CAAC,IAAI,CAAC,EAAnB,CAAmB;iBACnC,CACF,CAAA;aACF;YAED,IAAI,CAAC,GAAG,CAAC,KAAK;gBAAE,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAA;YAExE,OAAO,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACjC,CAAC,CAAA;IACH,CAAC;CACF,CAAC,CAAA;AAEF,kBAAe,YAAI,CAAA","sourcesContent":["import type { Form as FormType, IFormFeedback } from '@formily/core'\r\nimport { FormProvider as _FormProvider, useForm } from '@formily/vue'\r\nimport { defineComponent, h } from 'vue'\r\nimport type { FormLayoutProps } from '../form-layout'\r\nimport { FormLayout } from '../form-layout'\r\nimport { PreviewText } from '../preview-text'\r\nimport type { Component, VNode, DefineComponent } from 'vue'\r\n\r\nconst FormProvider = _FormProvider as unknown as Component\r\n\r\nexport interface FormProps extends FormLayoutProps {\r\n  form?: FormType\r\n  component?: Component\r\n  previewTextPlaceholder: string | (() => VNode)\r\n  onAutoSubmit?: (values: any) => any\r\n  onAutoSubmitFailed?: (feedbacks: IFormFeedback[]) => void\r\n}\r\n\r\nexport const Form = defineComponent({\r\n  name: 'FForm',\r\n  props: [\r\n    'form',\r\n    'component',\r\n    'previewTextPlaceholder',\r\n    'onAutoSubmit',\r\n    'onAutoSubmitFailed',\r\n  ],\r\n  setup(props: FormProps, { attrs, slots }) {\r\n    const top = useForm()\r\n\r\n    return () => {\r\n      const {\r\n        form,\r\n        component = 'form',\r\n        onAutoSubmit = attrs?.autoSubmit,\r\n        onAutoSubmitFailed = attrs?.autoSubmitFailed,\r\n        previewTextPlaceholder = slots?.previewTextPlaceholder,\r\n      } = props\r\n\r\n      const renderContent = (form: FormType) => {\r\n        return h(\r\n          PreviewText.Placeholder as DefineComponent,\r\n          {\r\n            value: previewTextPlaceholder,\r\n          },\r\n          {\r\n            default: () => [\r\n              h(\r\n                FormLayout,\r\n                {\r\n                  ...attrs,\r\n                },\r\n                {\r\n                  default: () => [\r\n                    h(\r\n                      component as DefineComponent,\r\n                      {\r\n                        onSubmit: (e: Event) => {\r\n                          e?.stopPropagation?.()\r\n                          e?.preventDefault?.()\r\n                          form\r\n                            .submit(onAutoSubmit as (e: any) => void)\r\n                            .catch(onAutoSubmitFailed as (e: any) => void)\r\n                        },\r\n                      },\r\n                      slots\r\n                    ),\r\n                  ],\r\n                }\r\n              ),\r\n            ],\r\n          }\r\n        )\r\n      }\r\n\r\n      if (form) {\r\n        return h(\r\n          FormProvider as DefineComponent,\r\n          { form },\r\n          {\r\n            default: () => renderContent(form),\r\n          }\r\n        )\r\n      }\r\n\r\n      if (!top.value) throw new Error('must pass form instance by createForm')\r\n\r\n      return renderContent(top.value)\r\n    }\r\n  },\r\n})\r\n\r\nexport default Form\r\n"]}