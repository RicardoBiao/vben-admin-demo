{"version":3,"file":"useResponsiveFormLayout.js","sourceRoot":"lib/","sources":["form-layout/useResponsiveFormLayout.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArr, isValid } from '@formily/shared'\r\nimport type { ComponentInternalInstance, Ref } from 'vue'\r\nimport { getCurrentInstance } from 'vue'\r\nimport { onMounted, ref } from 'vue'\r\n\r\ninterface IProps {\r\n  breakpoints?: number[]\r\n  layout?:\r\n    | 'vertical'\r\n    | 'horizontal'\r\n    | 'inline'\r\n    | ('vertical' | 'horizontal' | 'inline')[]\r\n  labelCol?: number | number[]\r\n  wrapperCol?: number | number[]\r\n  labelAlign?: 'right' | 'left' | ('right' | 'left')[]\r\n  wrapperAlign?: 'right' | 'left' | ('right' | 'left')[]\r\n  [props: string]: any\r\n}\r\n\r\ninterface ICalcBreakpointIndex {\r\n  (originalBreakpoints: number[], width: number): number\r\n}\r\n\r\ninterface ICalculateProps {\r\n  (target: Element, props: IProps): IProps\r\n}\r\n\r\ninterface IUseResponsiveFormLayout {\r\n  (props: IProps): {\r\n    props: Ref<IProps>\r\n  }\r\n}\r\n\r\nconst useRefs = (): Record<string, unknown> => {\r\n  const vm: ComponentInternalInstance | null = getCurrentInstance()\r\n  return vm?.refs || {}\r\n}\r\n\r\nconst calcBreakpointIndex: ICalcBreakpointIndex = (breakpoints, width) => {\r\n  for (let i = 0; i < breakpoints.length; i++) {\r\n    if (width <= breakpoints[i]) {\r\n      return i\r\n    }\r\n  }\r\n}\r\n\r\nconst calcFactor = <T>(value: T | T[], breakpointIndex: number): T => {\r\n  if (Array.isArray(value)) {\r\n    if (breakpointIndex === -1) return value[0]\r\n    return value[breakpointIndex] ?? value[value.length - 1]\r\n  } else {\r\n    return value\r\n  }\r\n}\r\n\r\nconst factor = <T>(value: T | T[], breakpointIndex: number): T =>\r\n  isValid(value) ? calcFactor(value as any, breakpointIndex) : value\r\n\r\nconst calculateProps: ICalculateProps = (target, props) => {\r\n  const { clientWidth } = target\r\n  const {\r\n    breakpoints,\r\n    layout,\r\n    labelAlign,\r\n    wrapperAlign,\r\n    labelCol,\r\n    wrapperCol,\r\n    ...otherProps\r\n  } = props\r\n  const breakpointIndex = calcBreakpointIndex(breakpoints, clientWidth)\r\n\r\n  return {\r\n    layout: factor(layout, breakpointIndex),\r\n    labelAlign: factor(labelAlign, breakpointIndex),\r\n    wrapperAlign: factor(wrapperAlign, breakpointIndex),\r\n    labelCol: factor(labelCol, breakpointIndex),\r\n    wrapperCol: factor(wrapperCol, breakpointIndex),\r\n    ...otherProps,\r\n  }\r\n}\r\n\r\nexport const useResponsiveFormLayout: IUseResponsiveFormLayout = (props) => {\r\n  const { breakpoints } = props\r\n  if (!isArr(breakpoints)) {\r\n    return { props: ref(props) }\r\n  }\r\n  const layoutProps = ref<IProps>({})\r\n\r\n  const updateUI = (target) => {\r\n    layoutProps.value = calculateProps(target, props)\r\n  }\r\n\r\n  onMounted(() => {\r\n    const { root } = useRefs()\r\n    const observer = () => {\r\n      updateUI(root)\r\n    }\r\n    const resizeObserver = new ResizeObserver(observer)\r\n    if (root) {\r\n      resizeObserver.observe(root as Element)\r\n    }\r\n\r\n    updateUI(root)\r\n\r\n    return () => {\r\n      resizeObserver.disconnect()\r\n    }\r\n  })\r\n\r\n  return {\r\n    props: layoutProps,\r\n  }\r\n}\r\n"]}