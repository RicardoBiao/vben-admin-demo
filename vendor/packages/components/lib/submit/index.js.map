{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["submit/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,oCAA4C;AAE5C,sDAAgD;AAChD,2BAAwC;AAExC,iDAAoD;AAUvC,QAAA,MAAM,GAAG,IAAA,uBAAQ,EAC5B,IAAA,qBAAe,EAAC;IACd,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;IACnE,KAAK,EAAL,UAAM,KAAmB,EAAE,EAAgB;YAAd,KAAK,WAAA,EAAE,KAAK,WAAA;QACvC,IAAM,OAAO,GAAG,IAAA,mBAAa,GAAE,CAAA;QAE/B,OAAO;YAEH,IAAA,OAAO,GAIL,KAAK,QAJA,EACP,KAGE,KAAK,SAHmB,EAA1B,QAAQ,mBAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,KAAA,EAC1B,KAEE,KAAK,gBAFiC,EAAxC,eAAe,mBAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,eAAe,KAAA,EACxC,KACE,KAAK,eAD+B,EAAtC,cAAc,mBAAG,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,cAAc,KAAA,CAC/B;YAET,IAAM,IAAI,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAA;YAC3B,OAAO,IAAA,OAAC,EACN,uBAAS,wBAEJ,KAAK,KACR,UAAU,EAAE,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,EAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAC/C,IAAI,EAAE,SAAS,EACf,OAAO,EACL,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,EAChE,OAAO,EAAE,UAAC,CAAM;oBACd,IAAI,OAAO,EAAE;wBACX,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK;4BAAE,OAAM;qBACjC;oBACD,IAAI,QAAQ,EAAE;wBACZ,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CACA,MAAM,CAAC,QAA4B,EACpC,IAAI,CAAC,eAAmC,EACxC,KAAK,CAAC,cAAkC,CAAC,CAAA;qBAC7C;gBACH,CAAC,KAEH,KAAK,CACN,CAAA;QACH,CAAC,CAAA;IACH,CAAC;CACF,CAAC,CACH,CAAA;AAED,kBAAe,cAAM,CAAA","sourcesContent":["import { useParentForm } from '@formily/vue'\r\nimport type { IFormFeedback } from '@formily/core'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport { defineComponent, h } from 'vue'\r\n\r\nimport { Button as AntButton } from 'ant-design-vue'\r\nimport type { ButtonProps } from 'ant-design-vue/lib/button'\r\n\r\nexport interface ISubmitProps extends ButtonProps {\r\n  onClick?: (e: MouseEvent) => any\r\n  onSubmit?: (values: any) => any\r\n  onSubmitSuccess?: (payload: any) => void\r\n  onSubmitFailed?: (feedbacks: IFormFeedback[]) => void\r\n}\r\n\r\nexport const Submit = observer(\r\n  defineComponent({\r\n    name: 'FSubmit',\r\n    props: ['onClick', 'onSubmit', 'onSubmitSuccess', 'onSubmitFailed'],\r\n    setup(props: ISubmitProps, { attrs, slots }) {\r\n      const formRef = useParentForm()\r\n\r\n      return () => {\r\n        const {\r\n          onClick,\r\n          onSubmit = attrs?.onSubmit,\r\n          onSubmitSuccess = attrs?.onSubmitSuccess,\r\n          onSubmitFailed = attrs?.onSubmitFailed,\r\n        } = props\r\n\r\n        const form = formRef?.value\r\n        return h(\r\n          AntButton,\r\n          {\r\n            ...attrs,\r\n            nativeType: attrs?.submit ? 'button' : 'submit',\r\n            type: 'primary',\r\n            loading:\r\n              attrs.loading !== undefined ? attrs.loading : form?.submitting,\r\n            onClick: (e: any) => {\r\n              if (onClick) {\r\n                if (onClick(e) === false) return\r\n              }\r\n              if (onSubmit) {\r\n                form\r\n                  ?.submit(onSubmit as (e: any) => void)\r\n                  .then(onSubmitSuccess as (e: any) => void)\r\n                  .catch(onSubmitFailed as (e: any) => void)\r\n              }\r\n            },\r\n          },\r\n          slots\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nexport default Submit\r\n"]}