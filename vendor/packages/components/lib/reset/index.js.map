{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["reset/index.ts"],"names":[],"mappings":";;;AACA,oCAA4C;AAC5C,sDAAgD;AAChD,2BAAwC;AAGxC,iDAAoD;AAIvC,QAAA,KAAK,GAAG,IAAA,uBAAQ,EAC3B,IAAA,qBAAe,EAAC;IACd,IAAI,EAAE,OAAO;IACb,KAAK,EAAE;QACL,UAAU,EAAE;YACV,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,KAAK;SACf;QACD,QAAQ,EAAE;YACR,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,KAAK;SACf;KACF;IACD,KAAK,EAAL,UAAM,KAAK,EAAE,EAAgB;YAAd,KAAK,WAAA,EAAE,KAAK,WAAA;QACzB,IAAM,OAAO,GAAG,IAAA,mBAAa,GAAE,CAAA;QAC/B,OAAO;YACL,IAAM,IAAI,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAA;YAC3B,OAAO,IAAA,OAAC,EACN,uBAAS,EACT;gBACE,KAAK,OAAA;gBACL,OAAO,EAAE,UAAC,CAAM;oBACd,IAAI,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,EAAE;wBAClB,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK;4BAAE,OAAM;qBACvC;oBACD,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CACA,KAAK,CAAC,GAAG,EAAE;wBACX,UAAU,EAAE,KAAK,CAAC,UAAU;wBAC5B,QAAQ,EAAE,KAAK,CAAC,QAAQ;qBACzB,EACA,IAAI,CAAC,KAAK,CAAC,oBAAwC,EACnD,KAAK,CAAC,KAAK,CAAC,mBAAuC,CAAC,CAAA;gBACzD,CAAC;aACF,EACD,KAAK,CACN,CAAA;QACH,CAAC,CAAA;IACH,CAAC;CACF,CAAC,CACH,CAAA;AAED,kBAAe,aAAK,CAAA","sourcesContent":["import type { IFieldResetOptions } from '@formily/core'\r\nimport { useParentForm } from '@formily/vue'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport { defineComponent, h } from 'vue'\r\n\r\nimport type { ButtonProps as AntButtonProps } from 'ant-design-vue/lib/button'\r\nimport { Button as AntButton } from 'ant-design-vue'\r\n\r\nexport type ResetProps = IFieldResetOptions & AntButtonProps\r\n\r\nexport const Reset = observer(\r\n  defineComponent({\r\n    name: 'Reset',\r\n    props: {\r\n      forceClear: {\r\n        type: Boolean,\r\n        default: false,\r\n      },\r\n      validate: {\r\n        type: Boolean,\r\n        default: false,\r\n      },\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n      const formRef = useParentForm()\r\n      return () => {\r\n        const form = formRef?.value\r\n        return h(\r\n          AntButton,\r\n          {\r\n            attrs,\r\n            onClick: (e: any) => {\r\n              if (props?.onClick) {\r\n                if (props.onClick(e) === false) return\r\n              }\r\n              form\r\n                ?.reset('*', {\r\n                  forceClear: props.forceClear,\r\n                  validate: props.validate,\r\n                })\r\n                .then(attrs.resetValidateSuccess as (e: any) => void)\r\n                .catch(attrs.resetValidateFailed as (e: any) => void)\r\n            },\r\n          },\r\n          slots\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nexport default Reset\r\n"]}