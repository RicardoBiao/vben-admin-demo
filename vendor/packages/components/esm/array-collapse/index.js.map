{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["array-collapse/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Ref } from 'vue'\r\nimport { defineComponent, ref, watchEffect, h } from 'vue'\r\nimport { Badge, Card, Collapse, Empty } from 'ant-design-vue'\r\nimport type { ArrayField } from '@formily/core'\r\nimport {\r\n  RecursionField,\r\n  useField,\r\n  useFieldSchema,\r\n  FragmentComponent,\r\n} from '@formily/vue'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport type { ISchema } from '@formily/json-schema'\r\nimport { stylePrefix } from '../__builtins__/configs'\r\nimport { ArrayBase } from '../array-base'\r\nimport { composeExport } from '../__builtins__/shared'\r\nimport type { CollapseProps } from 'ant-design-vue/lib/collapse'\r\nimport type { CollapsePanelProps } from 'ant-design-vue/lib/collapse/CollapsePanel'\r\nimport { toArr } from '@formily/shared'\r\n\r\nexport interface IArrayCollapseProps extends CollapseProps {\r\n  defaultOpenPanelCount?: number\r\n}\r\n\r\nconst isAdditionComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('Addition') > -1\r\n}\r\n\r\nconst isIndexComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('Index') > -1\r\n}\r\n\r\nconst isRemoveComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('Remove') > -1\r\n}\r\n\r\nconst isMoveUpComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('MoveUp') > -1\r\n}\r\n\r\nconst isMoveDownComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('MoveDown') > -1\r\n}\r\n\r\nconst isOperationComponent = (schema: ISchema) => {\r\n  return (\r\n    isAdditionComponent(schema) ||\r\n    isRemoveComponent(schema) ||\r\n    isMoveDownComponent(schema) ||\r\n    isMoveUpComponent(schema)\r\n  )\r\n}\r\nconst range = (count: number) => Array.from({ length: count }).map((_, i) => i)\r\n\r\nconst takeDefaultActiveKeys = (\r\n  dataSourceLength: number,\r\n  defaultOpenPanelCount: number\r\n) => {\r\n  if (dataSourceLength < defaultOpenPanelCount) return range(dataSourceLength)\r\n  return range(defaultOpenPanelCount)\r\n}\r\n\r\nconst insertActiveKeys = (activeKeys: number[], index: number) => {\r\n  if (activeKeys.length <= index) return activeKeys.concat(index)\r\n  return activeKeys.reduce((buf, key) => {\r\n    if (key < index) return buf.concat(key)\r\n    if (key === index) return buf.concat([key, key + 1])\r\n    return buf.concat(key + 1)\r\n  }, [])\r\n}\r\n\r\nconst ArrayCollapseInner = observer(\r\n  defineComponent({\r\n    name: 'ArrayCollapse',\r\n    props: {\r\n      defaultOpenPanelCount: {\r\n        type: Number,\r\n        default: 5,\r\n      },\r\n    },\r\n    setup(props, { attrs }) {\r\n      const fieldRef = useField<ArrayField>()\r\n      const schemaRef = useFieldSchema()\r\n\r\n      const prefixCls = `${stylePrefix}-array-collapse`\r\n      const activeKeys: Ref<number[]> = ref([])\r\n\r\n      watchEffect(() => {\r\n        const field = fieldRef.value\r\n        const dataSource = Array.isArray(field.value) ? field.value.slice() : []\r\n        if (!field.modified && dataSource.length) {\r\n          activeKeys.value = takeDefaultActiveKeys(\r\n            dataSource.length,\r\n            props.defaultOpenPanelCount\r\n          )\r\n        }\r\n      })\r\n\r\n      const { keyMap } = ArrayBase.useKey(schemaRef.value)\r\n\r\n      return () => {\r\n        const field = fieldRef.value\r\n        const schema = schemaRef.value\r\n        const dataSource = Array.isArray(field.value) ? field.value.slice() : []\r\n        if (!schema) throw new Error('can not found schema object')\r\n\r\n        const renderAddition = () => {\r\n          return schema.reduceProperties((addition, schema, key) => {\r\n            if (isAdditionComponent(schema)) {\r\n              return h(RecursionField, {\r\n                schema,\r\n                name: key,\r\n              })\r\n            }\r\n            return addition\r\n          }, null)\r\n        }\r\n\r\n        const renderEmpty = () => {\r\n          if (dataSource?.length) return\r\n          return h(\r\n            Card,\r\n            {\r\n              class: [`${prefixCls}-item`],\r\n            },\r\n            {\r\n              default: () => h(Empty),\r\n            }\r\n          )\r\n        }\r\n\r\n        const renderItems = () => {\r\n          if (!dataSource.length) {\r\n            return null\r\n          }\r\n\r\n          const items = dataSource?.map((item, index) => {\r\n            const items = Array.isArray(schema.items)\r\n              ? schema.items[index] || schema.items[0]\r\n              : schema.items\r\n            // const key = getKey(item, index)\r\n            const panelProps = field\r\n              .query(`${field.address}.${index}`)\r\n              .get('componentProps')\r\n            const props: CollapsePanelProps = items['x-component-props']\r\n            const headerTitle =\r\n              panelProps?.header || props.header || field.title\r\n            const path = field.address.concat(index)\r\n            const errors = field.form.queryFeedbacks({\r\n              type: 'error',\r\n              address: `${path}.**`,\r\n            })\r\n\r\n            const header = h(\r\n              ArrayBase.Item,\r\n              {\r\n                index,\r\n                record: item,\r\n              },\r\n              {\r\n                default: () => [\r\n                  h(RecursionField, {\r\n                    schema: items,\r\n                    name: index,\r\n                    filterProperties: (schema) => {\r\n                      if (!isIndexComponent(schema)) return false\r\n                      return true\r\n                    },\r\n                    onlyRenderProperties: true,\r\n                  }),\r\n                  errors.length\r\n                    ? h(\r\n                        Badge,\r\n                        {\r\n                          class: [`${prefixCls}-errors-badge`],\r\n                          count: errors.length,\r\n                        },\r\n                        { default: () => headerTitle }\r\n                      )\r\n                    : headerTitle,\r\n                ],\r\n              }\r\n            )\r\n\r\n            const extra = h(\r\n              ArrayBase.Item,\r\n              {\r\n                index,\r\n                record: item,\r\n              },\r\n              {\r\n                default: () => [\r\n                  h(\r\n                    RecursionField,\r\n                    {\r\n                      schema: items,\r\n                      name: index,\r\n                      filterProperties: (schema) => {\r\n                        if (!isOperationComponent(schema)) return false\r\n                        return true\r\n                      },\r\n                      onlyRenderProperties: true,\r\n                    },\r\n                    {\r\n                      default: () => [attrs.extra],\r\n                    }\r\n                  ),\r\n                ],\r\n              }\r\n            )\r\n            const content = h(RecursionField, {\r\n              schema: items,\r\n              name: index,\r\n              filterProperties: (schema) => {\r\n                if (isIndexComponent(schema)) return false\r\n                if (isOperationComponent(schema)) return false\r\n                return true\r\n              },\r\n            })\r\n\r\n            const newProps = { ...props }\r\n            const newPanelProps = panelProps ? { ...panelProps } : {}\r\n            // 不传header这个props，采用slot的header\r\n            delete newProps.header\r\n            delete newPanelProps.header\r\n\r\n            return h(\r\n              Collapse.Panel,\r\n              {\r\n                ...newProps,\r\n                ...newPanelProps,\r\n                key: index,\r\n                forceRender: true,\r\n              },\r\n              {\r\n                default: () => [\r\n                  h(\r\n                    ArrayBase.Item,\r\n                    {\r\n                      index,\r\n                      record: item,\r\n                    },\r\n                    {\r\n                      default: () => [content],\r\n                    }\r\n                  ),\r\n                ],\r\n                header: () => header,\r\n                extra: () => extra,\r\n              }\r\n            )\r\n          })\r\n\r\n          return h(\r\n            Collapse,\r\n            {\r\n              ...attrs,\r\n              class: [`${prefixCls}-item`],\r\n              activeKey: activeKeys.value,\r\n              onChange: (keys: number[]) => {\r\n                activeKeys.value = toArr(keys).map(Number)\r\n              },\r\n            },\r\n            { default: () => [items] }\r\n          )\r\n        }\r\n\r\n        return h(\r\n          ArrayBase,\r\n          {\r\n            keyMap,\r\n            onAdd: (index: number) => {\r\n              activeKeys.value = insertActiveKeys(activeKeys.value, index)\r\n            },\r\n          },\r\n          {\r\n            default: () => [renderEmpty(), renderItems(), renderAddition()],\r\n          }\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nconst ArrayCollapsePanel = defineComponent<CollapsePanelProps>({\r\n  name: 'ArrayCollapsePanel',\r\n  inheritAttrs: false,\r\n  setup(_props, { slots }) {\r\n    return () => h(FragmentComponent, {}, slots)\r\n  },\r\n})\r\n\r\nexport const ArrayCollapse = composeExport(ArrayCollapseInner, {\r\n  CollapsePanel: ArrayCollapsePanel,\r\n  Index: ArrayBase.Index,\r\n  SortHandle: ArrayBase.SortHandle,\r\n  Addition: ArrayBase.Addition,\r\n  Remove: ArrayBase.Remove,\r\n  MoveDown: ArrayBase.MoveDown,\r\n  MoveUp: ArrayBase.MoveUp,\r\n  useArray: ArrayBase.useArray,\r\n  useIndex: ArrayBase.useIndex,\r\n  useRecord: ArrayBase.useRecord,\r\n})\r\n\r\nexport default ArrayCollapse\r\n"]}