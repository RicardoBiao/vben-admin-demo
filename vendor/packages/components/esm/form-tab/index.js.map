{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["form-tab/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAE,MAAM,KAAK,CAAA;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAA;AAChD,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAA;AACzC,OAAO,EACL,QAAQ,EACR,cAAc,EACd,cAAc,EACd,iBAAiB,GAClB,MAAM,cAAc,CAAA;AAErB,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,gBAAgB,CAAA;AAC5C,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAA;AAIrD,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAA;AAE9C,IAAA,OAAO,GAAK,IAAI,QAAT,CAAS;AAexB,IAAM,OAAO,GAAG;IACd,IAAM,SAAS,GAAG,QAAQ,EAAE,CAAC,KAAK,CAAA;IAClC,IAAM,MAAM,GAAG,cAAc,EAAE,CAAC,KAAK,CAAA;IACrC,IAAM,IAAI,GAAsD,QAAQ,CAAC,EAAE,CAAC,CAAA;IAC5E,MAAM,CAAC,aAAa,CAAC,UAAC,MAAM,EAAE,IAAI;;QAChC,IAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;QACpE,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,MAAK,MAAM,IAAI,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,MAAK,QAAQ;YAAE,OAAM;QACpE,IAAI,CAAA,MAAA,MAAM,CAAC,aAAa,CAAC,0CAAE,OAAO,CAAC,SAAS,CAAC,IAAG,CAAC,CAAC,EAAE;YAClD,IAAI,CAAC,IAAI,CAAC;gBACR,IAAI,MAAA;gBACJ,KAAK,aACH,GAAG,EAAE,CAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,mBAAmB,CAAC,0CAAE,GAAG,KAAI,IAAI,IAC5C,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,mBAAmB,CAAC,CACjC;gBACD,MAAM,QAAA;aACP,CAAC,CAAA;SACH;IACH,CAAC,CAAC,CAAA;IACF,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,IAAM,aAAa,GAAG,UAAC,gBAAyB;IAC9C,IAAM,OAAO,GAAG,KAAK,CAAC;QACpB,SAAS,EAAE,gBAAgB;QAC3B,YAAY,EAAZ,UAAa,GAAW;YACtB,OAAO,CAAC,SAAS,GAAG,GAAG,CAAA;QACzB,CAAC;KACF,CAAC,CAAA;IACF,OAAO,OAAO,CAAA;AAChB,CAAC,CAAA;AAED,IAAM,YAAY,GAAG,QAAQ;AAC3B,sDAAsD;AACtD,eAAe,CAAC;IACd,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,CAAC,SAAS,CAAC;IAClB,KAAK,EAAL,UAAM,KAAoB,EAAE,EAAS;YAAP,KAAK,WAAA;QACjC,IAAM,KAAK,GAAG,QAAQ,EAAE,CAAC,KAAK,CAAA;QAC9B,IAAM,UAAU,GAAG,QAAQ,CAAC,sBAAM,OAAA,MAAA,KAAK,CAAC,OAAO,mCAAI,aAAa,EAAE,CAAA,EAAA,CAAC,CAAA;QAEnE,IAAM,SAAS,GAAG,UAAG,WAAW,cAAW,CAAA;QAE3C,OAAO;;YACL,IAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAA;YAChC,IAAM,IAAI,GAAG,OAAO,EAAE,CAAA;YACtB,IAAM,SAAS,GACb,KAAK,CAAC,SAAS,KAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,CAAA,KAAI,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAG,CAAC,CAAC,0CAAE,IAAI,CAAA,CAAA;YAC1D,IAAM,SAAS,GAAG,UAAC,GAAc,EAAE,KAAU;gBAC3C,IAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC;oBACvC,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,UAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,OAAI;iBAC1C,CAAC,CAAA;gBACF,IAAI,MAAM,CAAC,MAAM,EAAE;oBACjB,OAAO;wBACL,OAAA,CAAC,CACC,KAAK,EACL;4BACE,KAAK,EAAE,CAAC,UAAG,SAAS,kBAAe,CAAC;4BACpC,KAAK,EAAE,MAAM,CAAC,MAAM;4BACpB,IAAI,EAAE,OAAO;yBACd,EACD,EAAE,OAAO,EAAE,cAAM,OAAA,KAAK,CAAC,GAAG,EAAT,CAAS,EAAE,CAC7B;oBARD,CAQC,CAAA;iBACJ;gBACD,OAAO,KAAK,CAAC,GAAG,CAAA;YAClB,CAAC,CAAA;YAED,IAAM,OAAO,GAAG,UAAC,IAAI;gBACnB,OAAO,IAAI,CAAC,GAAG,CAAC,UAAC,EAAuB;wBAArB,KAAK,WAAA,EAAE,MAAM,YAAA,EAAE,IAAI,UAAA;oBACpC,OAAO,CAAC,CACN,OAAO,sBAEL,GAAG,EAAE,IAAI,IACN,KAAK,KACR,GAAG,EAAE,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,EAC3B,WAAW,EAAE,IAAI,KAEnB;wBACE,OAAO,EAAE,cAAM,OAAA;4BACb,CAAC,CACC,cAAc,EACd;gCACE,MAAM,QAAA;gCACN,IAAI,MAAA;6BACL,EACD,EAAE,CACH;yBACF,EATc,CASd;qBACF,CACF,CAAA;gBACH,CAAC,CAAC,CAAA;YACJ,CAAC,CAAA;YACD,OAAO,CAAC,CACN,IAAI,wBAEC,KAAK,KACR,KAAK,EAAE,CAAC,SAAS,CAAC,EAClB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,SAAS,EAAE,SAAS,EACpB,QAAQ,EAAE,UAAC,GAAG;;oBACZ,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,QAAQ,sDAAG,GAAG,CAAC,CAAA;oBACtB,MAAA,OAAO,CAAC,YAAY,wDAAG,GAAa,CAAC,CAAA;gBACvC,CAAC,KAEH;gBACE,OAAO,EAAE,cAAM,OAAA,OAAO,CAAC,IAAI,CAAC,EAAb,CAAa;aAC7B,CACF,CAAA;QACH,CAAC,CAAA;IACH,CAAC;CACF,CAAC,CACH,CAAA;AAED,sDAAsD;AACtD,IAAM,WAAW,GAAG,eAAe,CAAoB;IACrD,IAAI,EAAE,aAAa;IACnB,KAAK,YAAC,MAAM,EAAE,EAAS;YAAP,KAAK,WAAA;QACnB,OAAO,cAAM,OAAA,CAAC,CAAC,iBAAiB,EAAE,EAAE,EAAE,KAAK,CAAC,EAA/B,CAA+B,CAAA;IAC9C,CAAC;CACF,CAAC,CAAA;AAEF,MAAM,CAAC,IAAM,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE;IACjD,OAAO,EAAE,WAAW;IACpB,aAAa,eAAA;CACd,CAAC,CAAA;AAEF,eAAe,OAAO,CAAA","sourcesContent":["import { defineComponent, reactive, computed, h } from 'vue'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport { model } from '@formily/reactive'\r\nimport {\r\n  useField,\r\n  useFieldSchema,\r\n  RecursionField,\r\n  FragmentComponent,\r\n} from '@formily/vue'\r\nimport type { Schema, SchemaKey } from '@formily/json-schema'\r\nimport { Tabs, Badge } from 'ant-design-vue'\r\nimport { stylePrefix } from '../__builtins__/configs'\r\n\r\nimport type { TabsProps, TabPaneProps } from 'ant-design-vue/lib/tabs'\r\n\r\nimport { composeExport } from '../__builtins__/shared'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nexport interface IFormTab {\r\n  activeKey: string\r\n  setActiveKey(key: string): void\r\n}\r\n\r\nexport interface IFormTabProps extends TabsProps {\r\n  formTab?: IFormTab\r\n}\r\n\r\nexport interface IFormTabPaneProps extends TabPaneProps {\r\n  key: string\r\n}\r\n\r\nconst useTabs = () => {\r\n  const tabsField = useField().value\r\n  const schema = useFieldSchema().value\r\n  const tabs: { name: SchemaKey; props: any; schema: Schema }[] = reactive([])\r\n  schema.mapProperties((schema, name) => {\r\n    const field = tabsField.query(tabsField.address.concat(name)).take()\r\n    if (field?.display === 'none' || field?.display === 'hidden') return\r\n    if (schema['x-component']?.indexOf('TabPane') > -1) {\r\n      tabs.push({\r\n        name,\r\n        props: {\r\n          key: schema?.['x-component-props']?.key || name,\r\n          ...schema?.['x-component-props'],\r\n        },\r\n        schema,\r\n      })\r\n    }\r\n  })\r\n  return tabs\r\n}\r\n\r\nconst createFormTab = (defaultActiveKey?: string) => {\r\n  const formTab = model({\r\n    activeKey: defaultActiveKey,\r\n    setActiveKey(key: string) {\r\n      formTab.activeKey = key\r\n    },\r\n  })\r\n  return formTab\r\n}\r\n\r\nconst FormTabInner = observer(\r\n  // eslint-disable-next-line vue/one-component-per-file\r\n  defineComponent({\r\n    name: 'FormTab',\r\n    props: ['formTab'],\r\n    setup(props: IFormTabProps, { attrs }) {\r\n      const field = useField().value\r\n      const formTabRef = computed(() => props.formTab ?? createFormTab())\r\n\r\n      const prefixCls = `${stylePrefix}-form-tab`\r\n\r\n      return () => {\r\n        const formTab = formTabRef.value\r\n        const tabs = useTabs()\r\n        const activeKey =\r\n          props.activeKey || formTab?.activeKey || tabs?.[0]?.name\r\n        const badgedTab = (key: SchemaKey, props: any) => {\r\n          const errors = field.form.queryFeedbacks({\r\n            type: 'error',\r\n            address: `${field.address.concat(key)}.*`,\r\n          })\r\n          if (errors.length) {\r\n            return () =>\r\n              h(\r\n                Badge,\r\n                {\r\n                  class: [`${prefixCls}-errors-badge`],\r\n                  count: errors.length,\r\n                  size: 'small',\r\n                },\r\n                { default: () => props.tab }\r\n              )\r\n          }\r\n          return props.tab\r\n        }\r\n\r\n        const getTabs = (tabs) => {\r\n          return tabs.map(({ props, schema, name }) => {\r\n            return h(\r\n              TabPane,\r\n              {\r\n                key: name,\r\n                ...props,\r\n                tab: badgedTab(name, props),\r\n                forceRender: true,\r\n              },\r\n              {\r\n                default: () => [\r\n                  h(\r\n                    RecursionField,\r\n                    {\r\n                      schema,\r\n                      name,\r\n                    },\r\n                    {}\r\n                  ),\r\n                ],\r\n              }\r\n            )\r\n          })\r\n        }\r\n        return h(\r\n          Tabs,\r\n          {\r\n            ...attrs,\r\n            class: [prefixCls],\r\n            style: attrs.style,\r\n            activeKey: activeKey,\r\n            onChange: (key) => {\r\n              props?.onChange?.(key)\r\n              formTab.setActiveKey?.(key as string)\r\n            },\r\n          },\r\n          {\r\n            default: () => getTabs(tabs),\r\n          }\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\n// eslint-disable-next-line vue/one-component-per-file\r\nconst FormTabPane = defineComponent<IFormTabPaneProps>({\r\n  name: 'FormTabPane',\r\n  setup(_props, { slots }) {\r\n    return () => h(FragmentComponent, {}, slots)\r\n  },\r\n})\r\n\r\nexport const FormTab = composeExport(FormTabInner, {\r\n  TabPane: FormTabPane,\r\n  createFormTab,\r\n})\r\n\r\nexport default FormTab\r\n"]}