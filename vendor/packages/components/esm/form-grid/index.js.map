{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["form-grid/index.ts"],"names":[],"mappings":"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","sourcesContent":["import type { InjectionKey, Ref } from 'vue'\r\nimport {\r\n  defineComponent,\r\n  provide,\r\n  ref,\r\n  onMounted,\r\n  computed,\r\n  watchEffect,\r\n  h,\r\n} from 'vue'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport { markRaw } from '@formily/reactive'\r\nimport type { IGridOptions } from '@formily/grid'\r\nimport { Grid } from '@formily/grid'\r\nimport { stylePrefix } from '../__builtins__/configs'\r\nimport { composeExport } from '../__builtins__/shared'\r\nimport { useFormLayout } from '../form-layout'\r\nimport { inject } from 'vue'\r\nimport type { PropType } from 'vue'\r\n\r\nexport interface IFormGridProps extends IGridOptions {\r\n  grid?: Grid<HTMLElement>\r\n  prefixCls?: string\r\n  className?: string\r\n}\r\n\r\nconst FormGridSymbol: InjectionKey<Ref<Grid<HTMLElement>>> =\r\n  Symbol('FormGridContext')\r\n\r\ninterface GridColumnProps {\r\n  gridSpan: number\r\n}\r\n\r\nexport const createFormGrid = (props: IFormGridProps): Grid<HTMLElement> => {\r\n  return markRaw(new Grid(props))\r\n}\r\n\r\nexport const useFormGrid = (): Ref<Grid<HTMLElement>> => inject(FormGridSymbol)\r\n\r\n/**\r\n * @deprecated\r\n */\r\nconst useGridSpan = (gridSpan: number) => {\r\n  return gridSpan\r\n}\r\n\r\n/**\r\n * @deprecated\r\n */\r\nexport const useGridColumn = (gridSpan = 1) => {\r\n  return gridSpan\r\n}\r\n\r\nconst FormGridInner = observer(\r\n  // eslint-disable-next-line vue/one-component-per-file\r\n  defineComponent({\r\n    name: 'FormGrid',\r\n    props: {\r\n      columnGap: {\r\n        type: Number,\r\n      },\r\n      rowGap: {\r\n        type: Number,\r\n      },\r\n      minColumns: {\r\n        type: [Number, Array],\r\n      },\r\n      minWidth: {\r\n        type: [Number, Array],\r\n      },\r\n      maxColumns: {\r\n        type: [Number, Array],\r\n      },\r\n      maxWidth: {\r\n        type: [Number, Array],\r\n      },\r\n      breakpoints: {\r\n        type: Array,\r\n      },\r\n      colWrap: {\r\n        type: Boolean,\r\n        default: true,\r\n      },\r\n      strictAutoFit: {\r\n        type: Boolean,\r\n        default: false,\r\n      },\r\n      shouldVisible: {\r\n        type: Function as PropType<IGridOptions['shouldVisible']>,\r\n        default() {\r\n          return () => true\r\n        },\r\n      },\r\n      grid: {\r\n        type: Object as PropType<Grid<HTMLElement>>,\r\n      },\r\n    },\r\n    setup(props) {\r\n      const layout = useFormLayout()\r\n\r\n      const gridInstance = computed(() => {\r\n        const newProps: IFormGridProps = {}\r\n        Object.keys(props).forEach((key) => {\r\n          if (typeof props[key] !== 'undefined') {\r\n            newProps[key] = props[key]\r\n          }\r\n        })\r\n        const options = {\r\n          columnGap: layout.value?.gridColumnGap ?? 8,\r\n          rowGap: layout.value?.gridRowGap ?? 4,\r\n          ...newProps,\r\n        }\r\n        return markRaw(options?.grid ? options.grid : new Grid(options))\r\n      })\r\n      const prefixCls = `${stylePrefix}-form-grid`\r\n      const root = ref(null)\r\n\r\n      provide(FormGridSymbol, gridInstance)\r\n\r\n      onMounted(() => {\r\n        watchEffect((onInvalidate) => {\r\n          const dispose = gridInstance.value.connect(root.value)\r\n          onInvalidate(() => {\r\n            dispose()\r\n          })\r\n        })\r\n      })\r\n\r\n      return {\r\n        prefixCls,\r\n        root,\r\n        gridInstance,\r\n      }\r\n    },\r\n    render() {\r\n      const { prefixCls, gridInstance } = this\r\n      return h(\r\n        'div',\r\n        {\r\n          class: `${prefixCls}`,\r\n          style: {\r\n            gridTemplateColumns: gridInstance.templateColumns,\r\n            gap: gridInstance.gap,\r\n          },\r\n          ref: 'root',\r\n        },\r\n        {\r\n          default: () => this.$slots.default,\r\n        }\r\n      )\r\n    },\r\n  })\r\n) as any\r\n\r\nconst FormGridColumn = observer(\r\n  // eslint-disable-next-line vue/one-component-per-file\r\n  defineComponent({\r\n    name: 'FormGridColumn',\r\n    props: {\r\n      gridSpan: {\r\n        type: Number,\r\n        default: 1,\r\n      },\r\n    },\r\n    setup(props: GridColumnProps, { slots }) {\r\n      return () => {\r\n        return h(\r\n          'div',\r\n          {\r\n            'data-grid-span': props.gridSpan,\r\n          },\r\n          slots\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nexport const FormGrid = composeExport(FormGridInner, {\r\n  GridColumn: FormGridColumn,\r\n  useGridSpan,\r\n  useFormGrid,\r\n  createFormGrid,\r\n})\r\n\r\nexport default FormGrid\r\n"]}