{"version":3,"file":"index.js","sourceRoot":"lib/","sources":["array-cards/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Card, Empty } from 'ant-design-vue'\r\nimport type { CardProps } from 'ant-design-vue/lib/card'\r\nimport type { ArrayField } from '@formily/core'\r\nimport { useField, useFieldSchema, RecursionField } from '@formily/vue'\r\nimport { observer } from '@formily/reactive-vue'\r\nimport type { ISchema } from '@formily/json-schema'\r\nimport { stylePrefix } from '../__builtins__/configs'\r\nimport { ArrayBase } from '../array-base'\r\nimport { composeExport } from '../__builtins__/shared'\r\nimport { defineComponent, h } from 'vue'\r\n\r\nconst isAdditionComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('Addition') > -1\r\n}\r\n\r\nconst isIndexComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('Index') > -1\r\n}\r\n\r\nconst isRemoveComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('Remove') > -1\r\n}\r\n\r\nconst isMoveUpComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('MoveUp') > -1\r\n}\r\n\r\nconst isMoveDownComponent = (schema: ISchema) => {\r\n  return schema['x-component']?.indexOf('MoveDown') > -1\r\n}\r\n\r\nconst isOperationComponent = (schema: ISchema) => {\r\n  return (\r\n    isAdditionComponent(schema) ||\r\n    isRemoveComponent(schema) ||\r\n    isMoveDownComponent(schema) ||\r\n    isMoveUpComponent(schema)\r\n  )\r\n}\r\n\r\nconst ArrayCardsInner = observer(\r\n  defineComponent({\r\n    name: 'ArraryCards',\r\n    setup(_props: CardProps, { attrs }) {\r\n      const fieldRef = useField<ArrayField>()\r\n      const schemaRef = useFieldSchema()\r\n      const prefixCls = `${stylePrefix}-array-cards`\r\n      const { getKey, keyMap } = ArrayBase.useKey(schemaRef.value)\r\n      return () => {\r\n        const props = { ...attrs }\r\n        const field = fieldRef.value\r\n        const schema = schemaRef.value\r\n        const dataSource = Array.isArray(field.value) ? field.value : []\r\n        if (!schema) throw new Error('can not found schema object')\r\n        const renderItems = () => {\r\n          return dataSource?.map((item, index) => {\r\n            const items = Array.isArray(schema.items)\r\n              ? schema.items[index] || schema.items[0]\r\n              : schema.items\r\n\r\n            const title = h(\r\n              'span',\r\n              {},\r\n              {\r\n                default: () => [\r\n                  h(RecursionField, {\r\n                    schema: items,\r\n                    name: index,\r\n                    filterProperties: (schema) => {\r\n                      if (!isIndexComponent(schema)) return false\r\n                      return true\r\n                    },\r\n                    onlyRenderProperties: true,\r\n                  }),\r\n                  props.title || field.title,\r\n                ],\r\n              }\r\n            )\r\n\r\n            const extra = h(\r\n              'span',\r\n              {},\r\n              {\r\n                default: () => [\r\n                  h(RecursionField, {\r\n                    schema: items,\r\n                    name: index,\r\n                    filterProperties: (schema) => {\r\n                      if (!isOperationComponent(schema)) return false\r\n                      return true\r\n                    },\r\n                    onlyRenderProperties: true,\r\n                  }),\r\n                  props.extra,\r\n                ],\r\n              }\r\n            )\r\n\r\n            const content = h(RecursionField, {\r\n              schema: items,\r\n              name: index,\r\n              filterProperties: (schema) => {\r\n                if (isIndexComponent(schema)) return false\r\n                if (isOperationComponent(schema)) return false\r\n                return true\r\n              },\r\n            })\r\n\r\n            return h(\r\n              ArrayBase.Item,\r\n              {\r\n                key: getKey(item, index),\r\n                index,\r\n                record: item,\r\n              },\r\n              () =>\r\n                h(\r\n                  Card,\r\n                  {\r\n                    ...attrs,\r\n                    class: [`${prefixCls}-item`],\r\n                  },\r\n                  {\r\n                    default: () => content,\r\n                    title: () => title,\r\n                    extra: () => extra,\r\n                  }\r\n                )\r\n            )\r\n          })\r\n        }\r\n\r\n        const renderAddition = () => {\r\n          return schema.reduceProperties((addition, schema, key) => {\r\n            if (isAdditionComponent(schema)) {\r\n              return h(RecursionField, {\r\n                schema,\r\n                name: key,\r\n              })\r\n            }\r\n            return addition\r\n          }, null)\r\n        }\r\n\r\n        const renderEmpty = () => {\r\n          if (dataSource?.length) return\r\n          return h(\r\n            Card,\r\n            {\r\n              ...attrs,\r\n              class: [`${prefixCls}-item`],\r\n              title: props.title || field.title,\r\n            },\r\n            {\r\n              default: () => h(Empty),\r\n            }\r\n          )\r\n        }\r\n\r\n        return h(\r\n          ArrayBase,\r\n          { keyMap },\r\n          {\r\n            default: () => [renderEmpty(), renderItems(), renderAddition()],\r\n          }\r\n        )\r\n      }\r\n    },\r\n  })\r\n)\r\n\r\nexport const ArrayCards = composeExport(ArrayCardsInner, {\r\n  Index: ArrayBase.Index,\r\n  SortHandle: ArrayBase.SortHandle,\r\n  Addition: ArrayBase.Addition,\r\n  Remove: ArrayBase.Remove,\r\n  MoveDown: ArrayBase.MoveDown,\r\n  MoveUp: ArrayBase.MoveUp,\r\n  useArray: ArrayBase.useArray,\r\n  useIndex: ArrayBase.useIndex,\r\n  useRecord: ArrayBase.useRecord,\r\n})\r\n\r\nexport default ArrayCards\r\n"]}